{"ast":null,"code":"var _jsxFileName = \"/Users/jessicad/Documents/PROJECTS/markdown-previewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const text = \"# Welcome to my React Markdown Previewer! \\n ## This is a sub-heading...\\n\" + \"### And here's some other cool stuff:\\n\" + \"Heres some code, `<div></div>`, between 2 backticks.\\n\" + \"```\\n\" + \"// this is multi-line code:\\n\" + \"function anotherExample(firstLine, lastLine) {\\n\" + \"  if (firstLine == '```' && lastLine == '```') {\\n\" + \"    return multiLineCode;\\n\" + \"  }\\n\" + \"}\\n\" + \"```\\n\" + \"You can also make text **bold**... whoa!\\n\" + \"Or _italic_.\\n\" + \"Or... wait for it... **_both!_**\\n\" + \"And feel free to go crazy ~~crossing stuff out~~.\\n\" + \"There's also [links](https://www.freecodecamp.org), and\\n\" + \"> Block Quotes!\\n\" + \"- And of course there are lists.\\n\" + \"  - Some are bulleted.\\n\" + \"     - With different indentation levels.\\n\" + \"        - That look like this.\\n\" + \"1. And there are numbered lists too.\\n\" + \"1. Use just 1s if you want!\\n\" + \"1. And last but not least, let's not forget embedded images:\\n\" + \"![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\";\n  const [previewContent, setPreviewContent] = useState(text);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"editor\",\n      value: previewContent,\n      onChange: e => setPreviewContent(e.target.value),\n      rows: 40,\n      cols: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      id: \"preview\",\n      children: previewContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"+1HpWdwLuDkvev70GnB1ILCNgjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","text","previewContent","setPreviewContent","id","children","value","onChange","e","target","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessicad/Documents/PROJECTS/markdown-previewer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport './App.css';\n\nfunction App() {\n    const text = \"# Welcome to my React Markdown Previewer! \\n ## This is a sub-heading...\\n\" +\n    \"### And here's some other cool stuff:\\n\" +\n    \"Heres some code, `<div></div>`, between 2 backticks.\\n\" +\n    \"```\\n\" +\n    \"// this is multi-line code:\\n\" +\n    \"function anotherExample(firstLine, lastLine) {\\n\" +\n    \"  if (firstLine == '```' && lastLine == '```') {\\n\" +\n    \"    return multiLineCode;\\n\" +\n    \"  }\\n\" +\n    \"}\\n\" +\n    \"```\\n\" + \n    \"You can also make text **bold**... whoa!\\n\" +\n    \"Or _italic_.\\n\" +\n    \"Or... wait for it... **_both!_**\\n\" +\n    \"And feel free to go crazy ~~crossing stuff out~~.\\n\" +    \n    \"There's also [links](https://www.freecodecamp.org), and\\n\" +\n    \"> Block Quotes!\\n\" +\n    \"- And of course there are lists.\\n\" +\n    \"  - Some are bulleted.\\n\" +\n    \"     - With different indentation levels.\\n\" +\n    \"        - That look like this.\\n\" +\n    \"1. And there are numbered lists too.\\n\" +\n    \"1. Use just 1s if you want!\\n\" +\n    \"1. And last but not least, let's not forget embedded images:\\n\" +\n    \"![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\"\n\n    const [previewContent, setPreviewContent] = useState(text);\n\n    return (\n        <div id=\"wrapper\">\n            <textarea \n                id=\"editor\" \n                value={previewContent}\n                onChange = {e => setPreviewContent(e.target.value)}\n                rows={40} \n                cols={40}\n            />\n            <ReactMarkdown id=\"preview\" children={previewContent}></ReactMarkdown>\n        </div>\n    );\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,IAAI,GAAG,4EAA4E,GACzF,yCAAyC,GACzC,wDAAwD,GACxD,OAAO,GACP,+BAA+B,GAC/B,kDAAkD,GAClD,oDAAoD,GACpD,6BAA6B,GAC7B,OAAO,GACP,KAAK,GACL,OAAO,GACP,4CAA4C,GAC5C,gBAAgB,GAChB,oCAAoC,GACpC,qDAAqD,GACrD,2DAA2D,GAC3D,mBAAmB,GACnB,oCAAoC,GACpC,0BAA0B,GAC1B,6CAA6C,GAC7C,kCAAkC,GAClC,wCAAwC,GACxC,+BAA+B,GAC/B,gEAAgE,GAChE,mGAAmG;EAEnG,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACM,IAAI,CAAC;EAE1D,oBACIH,OAAA;IAAKM,EAAE,EAAC,SAAS;IAAAC,QAAA,gBACbP,OAAA;MACIM,EAAE,EAAC,QAAQ;MACXE,KAAK,EAAEJ,cAAe;MACtBK,QAAQ,EAAIC,CAAC,IAAIL,iBAAiB,CAACK,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACnDI,IAAI,EAAE,EAAG;MACTC,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFjB,OAAA,CAACF,aAAa;MAACQ,EAAE,EAAC,SAAS;MAACC,QAAQ,EAAEH;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd;AAACf,EAAA,CAzCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA2CZ,eAAeA,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}